basePath: /
definitions:
  controllers.TestAiBody:
    properties:
      message:
        type: string
    type: object
  models.DataLoginResponse:
    properties:
      email:
        type: string
      fullName:
        type: string
      idUser:
        type: string
      setPassword:
        type: boolean
      token:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.LoginResponse:
    properties:
      data:
        $ref: '#/definitions/models.DataLoginResponse'
      message:
        type: string
      status:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      fullName:
        type: string
      isVerify:
        type: boolean
      password:
        type: string
    type: object
info:
  contact: {}
  description: This is a Doc for a Porty!!! API 2.
  title: Porty!!! API
  version: "2.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with the input payload
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new user
      tags:
      - auth
  /characters:
    get:
      description: Get all characters from the database
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of records per page
        in: query
        name: record
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all characters
      tags:
      - characters
  /characters/{id}:
    get:
      description: Get a character by ID from the database
      parameters:
      - description: Character ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get character by ID
      tags:
      - characters
  /chat:
    post:
      consumes:
      - application/json
      description: Just Chatbot AI testing
      parameters:
      - description: Message
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/controllers.TestAiBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Test Chat Bot AI
      tags:
      - AI
  /users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user by ID
      tags:
      - users
    get:
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user by ID with the input payload
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a user by ID
      tags:
      - users
  /users/verify:
    get:
      description: Verify a user by Email
      parameters:
      - description: Verification Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify a user by Email
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: 'Use format: "Bearer {your_token}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
